#ifndef D_A_OBJ_TAPESTRY_H
#define D_A_OBJ_TAPESTRY_H

#include "SSystem/SComponent/c_bg_w.h"
#include "d/d_bg_w.h"
#include "d/d_cc_d.h"
#include "d/d_com_inf_game.h"
#include "f_op/f_op_actor.h"
#include "d/d_particle.h"
#include "m_Do/m_Do_hostIO.h"
#include "m_Do/m_Do_mtx.h"
#include "d/res/res_mcrtn.h"
class JPABaseEmitter;


class daObjTapestryPacket_c;


class daObjTapestryDrawVtx_c{
public:
    daObjTapestryDrawVtx_c(){};
public:
    cXyz mBufferVtx[8][6];  //TODO: Type may be daObjTapestryMoveVtx_c
    cXyz mBufferNrm[8][6];  
    cXyz mBufferThree[8][6];
};
class daObjTapestryMoveVtx_c{
public:
    cXyz mBuffer[8][6];
};
class daObjTapestryPLight_c{
public:
    void plight_delete();
    void plight_move(cXyz, csXyz);
    void plight_make();
    void setPointLight(cXyz, csXyz);

public:
    /* 0x00 */ u8 field_0;                             /* inferred */
    /* 0x01 */ char pad1[3];                        /* maybe part of unk0[4]? */
    /* 0x04 */ LIGHT_INFLUENCE field_4;                /* inferred */
    /* 0x24 */ JPABaseEmitter *field_24;                         /* inferred */
    /* 0x28 */ f32 field_28;                           /* inferred */
    /* Place member variables here */
};

class daObjTapestrySmokeCB_c : public dPa_followEcallBack{
public:

};

class daObjTapestryFireEff_c: public dPa_followEcallBack {
public:
    daObjTapestryFireEff_c(){unk14 = cXyz::Zero; unk20 = cXyz::Zero;}
    void get_pos() const {}
    void set_pos(const cXyz&) {}
    void set_spd(const cXyz&) {}

    void execute(JPABaseEmitter*);
public:
    /* 0x14 */ cXyz unk14;
    /* 0x20 */ cXyz unk20;
}; /* SIZE 2C */
namespace{
    u32 l_matDL[13] = {
        0x61430000,0x01614000,0x00176141,0x0004AD61,
        0xf3648080, 0x00000000, 0x00000000, 0x00000000,
        0x00000000, 0x00000000, 0x00000000, 0x00000000,
        0x00000000,
    };
    //u32 m_draw_data;
    //ResTIMG l_Txm_curtainTEX = *(static_cast<ResTIMG*>(dComIfG_getObjectRes("Mcrtn", MCRTN_DZB_MCRTN)));

    u32 l_Txm_curtainTEX[0x800] = {
    0x91439103,	0xA0C0F0E8,	0x914399A5,	0x0BA92909,	0x92429123,	0x5555AF00,	0x9AC39143,	0x57575780,
    0x99C59A48,	0xFF252525,	0x91849A27,	0xFFFF6050,	0xA36799C5,	0x5F5FC000,	0x9B679164,	0xF5F52B0A,
    0x91239143,	0xF2565655,	0x99C59163,	0x78787878,	0x92639143,	0x5555AA00,	0xA3A491A4,	0x5555E8E0,
    0xA1E6A227,	0x2B252925,	0x9A48A247,	0xFF585858,	0xAC64A206,	0x55552D00,	0xAC459A48,	0x5555550A,
    0x91E69247,	0xFE565654,	0x89C58923,	0x2D3D3DB5,	0x9B6891C5,	0xFDFDF52B,	0x8A038923,	0x95D5D500,
    0x89228902,	0x080CAE88,	0x91229923,	0xAFA5A595,	0x92828922,	0x555555A0,	0xA3429143,	0x55555580,
    0x9943A163,	0xFF959555,	0xA184A1E6,	0xFD252525,	0xABE1A163,	0x55555500,	0xAC23A1C5,	0x55555500,
    0xA20699A5,	0x0F090B09,	0x91848943,	0x090B2F2F,	0xAC05A1E6,	0x5555FF00,	0x9AE39143,	0xD5D5AF0A,
    0x88E28923,	0x6B6A6A5A,	0x00008902,	0xFF555555,	0x8A228922,	0x5555AA00,	0x92428902,	0x5555BA00,
    0x89229164,	0xFFFF0909,	0x9964A1E6,	0xC9259595,	0x9B229143,	0x575FE880,	0xAC449A25,	0x5555AA00,
    0xA20699E6,	0x0000030B,	0x9A069184,	0x2D35B5B5,	0xAC24A206,	0x5555AB00,	0xA3849184,	0x5555D52F,
    0x89238964,	0x7F686068,	0x89028922,	0xFFFF5A56,	0x8A048923,	0x55D5D50A,	0x92628902,	0x555555A0,
    0x91229923,	0xFFE52525,	0x9943A184,	0xE5A51595,	0xA3619923,	0x55555580,	0xAC22A163,	0x55555700,
    0xA1C59A06,	0x2D2D2D29,	0x89649206,	0x7F585858,	0xA3E4A1C5,	0x5555FF00,	0x9B268984,	0xF5FDAA02,
    0x89228943,	0xFF5F5458,	0x88E28922,	0xFFFA6959,	0x8A238923,	0x55F50A00,	0x92428922,	0x555E8000,
    0x91239164,	0xE9090909,	0x99A59102,	0x81818181,	0x9A829184,	0x55AA0800,	0x92849123,	0xF9020202,
    0x92229123,	0x005F5555,	0x9AE39123,	0x80F85F5F,	0x92029123,	0x5555B500,	0x99E59143,	0x5E5C5800,
    0xA36799E6,	0x00005F5F,	0x9B6691A5,	0x0A2BF5F5,	0x9A8899E6,	0x7A6AE2A0,	0x9A6691A5,	0x2535A50B,
    0x92439143,	0x00B75555,	0xA3649984,	0xE05F5555,	0x91E39123,	0x5555D500,	0xAB629984,	0x555555E0,
    0xAC24A1E6,	0x00FF5555,	0xAC06A248,	0x00FF5555,	0xAB83A1C5,	0x55555700,	0xA388A206,	0x7F7FFF00,
    0x9B6891C5,	0x0BADF5F5,	0x8A028923,	0x00BE5555,	0x9AC68985,	0xA5B5B50A,	0x91E28922,	0x55555500,
    0x92C29143,	0xA0FA5555,	0xA3629183,	0x80A05755,	0x91848902,	0x68EAE002,	0x99649963,	0x02020000,
    0xABE1A163,	0x0000FF55,	0xAC24A1A5,	0x0000FF55,	0xA184A163,	0xEFCFCAC2,	0xA1C5A163,	0xE8E068E0,
    0xAC45A227,	0x0202FB55,	0x9B6491A4,	0x2B2BAF55,	0xA1E69A27,	0x3F372DA5,	0x99E68963,	0x352F2D2D,
    0x92428943,	0x0000AA55,	0x92429143,	0x0000A855,	0x89438923,	0x2AB82020,	0x91638943,	0xA0A0C000,
    0xA3829964,	0xA0A0FF55,	0xAC44A1E6,	0x00AA5555,	0xA1A49963,	0x5E5E5E78,	0xA245A184,	0x7E7E5FE0,
    0xAC44A206,	0x00AA5555,	0xA3A491A5,	0x2BAF5555,	0xA306A206,	0x55555580,	0x9AC69184,	0xF5F5F50B,
    0x8A238923,	0x002BD5D5,	0x92628923,	0xA0FF5555,	0x89C38923,	0xF5F5D500,	0x9AA28923,	0x555555A0,
    0xA3419943,	0x80FF5555,	0xAB83A184,	0x00575555,	0xA3229963,	0x55555500,	0xA3A3A184,	0x55557F00,
    0xA3C4A1A5,	0x00FF5555,	0x9B2691E6,	0x0BAD5555,	0xA384A1C5,	0x55555500,	0xA34699E6,	0x5555550B,
    0x89E38923,	0x00BDDDF5,	0x92028902,	0x007D5555,	0x92228923,	0xF5D5FF00,	0x92829102,	0x5555FE00,
    0x92039123,	0x00575757,	0x92249102,	0x02FDFDFD,	0x9A839143,	0x5555AA00,	0x92649102,	0xFDFDA200,
    0x9A829183,	0xA0A8B855,	0x9B4499C4,	0xA8808078,	0x92029143,	0x55D50F02,	0xA38799C5,	0x575E7860,
    0xA3A69AA6,	0xAA0000ED,	0x9B459A04,	0x0B0A0BD5,	0xA3A69A06,	0xF5AD0903,	0x9A439164,	0xB5F5D7B8,
    0x92429163,	0x00002A55,	0xAC219983,	0xE0E0FA55,	0x92029102,	0xD5D5BF00,	0x9A229943,	0x5555550B,
    0xAC42A204,	0x00008055,	0xAC46A288,	0x02020A55,	0xABA3A184,	0x55555EE0,	0xABA5A206,	0x5555BD0B,
    0x9BA791A5,	0x2B2BAFF5,	0x92228943,	0x0000A857,	0x9A278964,	0x2D2D2D2F,	0x92438943,	0x5557FA80,
    0x9B2391A4,	0xAAA0E05E,	0xABC2A2C3,	0x5E808055,	0x9AA39184,	0x5555AB00,	0xABC29964,	0x55555FF8,
    0xAC22A224,	0xAA000055,	0xAC41A1E5,	0xAA000055,	0xAC02A184,	0x5555AA00,	0xABA2A1A4,	0x5555D52D,
    0xAC25A247,	0xAB022B55,	0x9B4691A4,	0xB52BAAFF,	0xA1E59AC7,	0x0B0B0B2D,	0x9AE791A5,	0xB5BDAD03,
    0x92638983,	0x5FA000A8,	0x9B429203,	0x57E8A0E0,	0x91A48963,	0xFEFDD51D,	0x9AE39164,	0xE055555F,
    0xAC02A2E3,	0x5FA08080,	0xAC22AB63,	0x7A0000AA,	0xA2C3A184,	0x0B5555FD,	0xA205A1A5,	0x00575757,
    0xAC44A366,	0xAA0202BD,	0xA3C69224,	0x2D2D2DB5,	0xA1E69A47,	0xBD092F3D,	0x9A278964,	0x0D0D2D2D,
    0x8A238943,	0x00002855,	0xA3429143,	0xA0A0EA55,	0x92238943,	0x55555754,	0xA3229163,	0x5555FA80,
    0xA3C2A184,	0x0000AA55,	0xAC22A184,	0x0000AF55,	0xA3229984,	0x5555D535,	0xA1A4A164,	0xAABABAB0,
    0xAC23A1C5,	0x002A5555,	0xA3C599E6,	0x0AAB5555,	0xABC3A1A5,	0x55557AC0,	0xA36599E6,	0x5555B50B,
    0x92638943,	0x002AD5D5,	0x92A29123,	0x00AA5555,	0x92629143,	0xD5D7FCA0,	0x92A29183,	0x5FE0002E,
    0x9AC29164,	0x00AA5555,	0x92649102,	0x0202FDFD,	0x9B0391A4,	0x55B50903,	0x92249122,	0xFDFDFBA0,
    0x92239AC3,	0xEAC9C9C9,	0xA386A2A9,	0x6083AD82,	0x91849A44,	0xD5DAC2C0,	0xA36699C5,	0x80E07A7F,
    0xA3859A87,	0xA2585CE2,	0x9B239A62,	0xDF2929AB,	0xA38599C5,	0x0209B5D5,	0x9A629964,	0xB0575555,
    0x9A839163,	0x28BED52E,	0xABE199E3,	0xEBE060E0,	0x9A829123,	0x00A87F55,	0xA3619943,	0x00AF5555,
    0xAC01A1E4,	0x800B252D,	0xABE5A1C5,	0x02C0785E,	0xAC01A1A4,	0x02807A55,	0xAC03A225,	0xE800AB55,
    0xA3A59224,	0xD5BF2D2D,	0x92238963,	0x022D95D5,	0x9B2591C5,	0x0B2FD555,	0x92839184,	0xBA80EA55,
    0xA34391A4,	0xE0585870,	0xABA2A224,	0x80020902,	0x9AC39984,	0x8002AD55,	0xAC029984,	0xE0785E57,
    0xAC02A1A4,	0xA8D75555,	0xAC42A224,	0x09826058,	0xABE2A184,	0xB52F0080,	0xABE3A206,	0x7080032D,
    0xAC24A246,	0x7A820B09,	0x9B679226,	0x0BAFD555,	0xAC05A206,	0x0280785F,	0x9B469225,	0xF52B0BAD,
    0x92838963,	0xB52F0000,	0xA34291A4,	0x78E08AAD,	0x92838984,	0x0000BCD7,	0x9AE29964,	0xB52D0380,
    0xABC2A1A4,	0xAB00E058,	0xABC3A1C5,	0x55D5350F,	0xAB42A184,	0x56575EA0,	0xAC23AB03,	0xAA60C02E,
    0xA3E6A226,	0x555F6A82,	0x9B268964,	0xBDAD2B2A,	0xA3E59A47,	0x0B2D250B,	0x9AE59204,	0xBF57EB09,
    0x92628943,	0x58E08200,	0xA3629943,	0xA8FE55D5,	0x92629123,	0x00389ED7,	0xA3019983,	0xB58B8078,
    0xABE199A3,	0x2982605E,	0xAC01A1A4,	0x57DA2000,	0xA3619963,	0x56F80002,	0xABC1A163,	0x00B7D555,
    0xABA3A225,	0x0025952E,	0xA3A49A44,	0x02C28209,	0xABE2A1C4,	0x00E05F55,	0xABE499A5,	0x2DB5D555,
    0x9AE29A03,	0x2A290B78,	0x9AA29163,	0xD555D52F,	0x9A829143,	0x78575555,	0x9AE29963,	0x00807A55,
    0x9B239984,	0xE27078E0,	0x9AC491A3,	0xAB09090B,	0x9B229984,	0x022BF555,	0x9A449102,	0x00AAFDFD,
    0x91439184,	0xE5C9C9C9,	0x9A4899C5,	0x60E06060,	0x99849143,	0x68687C70,	0x9A2791C5,	0x40406060,
    0x9A279985,	0x2F2F0D2F,	0x99849943,	0x3D092B01,	0x9A0699A5,	0x090D0D0B,	0x99849964,	0x0B030203,
    0x99439103,	0x0F0A0A2A,	0xA1439923,	0x70E0E0E0,	0x99439923,	0x0E0E0A0E,	0xA1439922,	0xE0A0A0A0,
    0xA164A143,	0xF8F878FE,	0xAB83A184,	0x55555F58,	0xA163A143,	0xDA2AAA3A,	0xABE2A184,	0x58585C5C,
    0xA2459184,	0xF5F5F535,	0x91648943,	0x80A0A030,	0xABC39184,	0xB5352509,	0x91849143,	0xB820A2AA,
    0x99849164,	0xC080C080,	0xA16499C4,	0xBBEA6BEA,	0x99A59164,	0xA2A2EAEA,	0xA1849964,	0x8000A088,
    0xAB03A1A4,	0xE0555555,	0xA2A4A1C5,	0x3D555557,	0xA184A164,	0x00208000,	0xA1E6A184,	0xE0E0E078,
    0xA226A1E6,	0xE060E8E8,	0x9A2791A5,	0x0D2D253D,	0xA206A1E6,	0x2080C8EC,	0x9AE599A5,	0xD5D5D580,
    0x91849164,	0x29090D8B,	0xA3829163,	0x785E5555,	0x92839164,	0x5555BF00,	0x9AE39143,	0x55555525,
    0xABC2A184,	0x00AA5555,	0xAB63A184,	0x2ED75555,	0xA163A143,	0xA020A828,	0xA1A4A164,	0xE0AAE8A0,
    0xAB8599E6,	0x00EA5755,	0x9AE59184,	0x092DFDFD,	0x99E699C5,	0xA0705858,	0x9A2691C5,	0x0F8F8BAB,
    0x91849123,	0xB6B5AF2D,	0x99E29123,	0x78555555,	0x91849123,	0x2F0D2B0F,	0xA2429122,	0x55555754,
    0xA1439A42,	0x5E000020,	0xA163A143,	0xA0A8A0A0,	0xABA1A183,	0x65C98909,	0xA163A143,	0xA0A8A8A8,
    0xA1C5A164,	0x78785878,	0x99C59964,	0x0B09090D,	0xA1A5A164,	0xF07058F8,	0xA1C59964,	0x098D0D89,
    0x99639123,	0x2A2EAA2A,	0x99639943,	0xDA5070F8,	0x99439923,	0x0800000A,	0x99430000,	0x00000000,
    0x99849964,	0xC0E2E2FA,	0x91029164,	0x56575757,	0x99649943,	0x000880CA,	0x91439164,	0x57575BA3,
    0x91649143,	0x58B05878,	0x9A0799A5,	0x40406070,	0x91649123,	0xE0E84068,	0x99E69984,	0xC0E07870,
    0x9A0699A5,	0x292B2F2F,	0x99A59984,	0x252727A9,	0x99E699C5,	0x290905B5,	0x99A59984,	0x2F0F0909,
    0x99849923,	0xA5ADAD2D,	0xA1439923,	0x80800080,	0x99849923,	0xAD2FAF2F,	0xA1430000,	0x00000000,
    0xA1430000,	0x00000000,	0xAB62A163,	0x5C545657,	0xA1430000,	0x00000000,	0xA1A4A143,	0xFCFF5F55,
    0xABC29AC3,	0x090A0282,	0x9B229164,	0x55952D0B,	0xA382A183,	0x80C0705C,	0xA3639AE3,	0x2D2D2F2D,
    0x99449184,	0x5F565E7C,	0xA1649963,	0x80808080,	0x9B039164,	0xB50B0000,	0xA3C2A184,	0x55550A00,
    0xA184A164,	0xA8802828,	0xA2A5A1A5,	0x57575754,	0xAC01A184,	0x5555A505,	0xAC23A1A4,	0x5860C000,
    0xAC04A1E6,	0x5470C000,	0xA3C492C3,	0x2D2D2D2D,	0xAC04A3C4,	0x000A0A2B,	0xA3C49AE3,	0x2D2D0909,
    0x92C39263,	0xE8A8A8A8,	0xABC19AE2,	0x7B787878,	0x9AC392A3,	0xBC38382C,	0xABE19B02,	0x78787878,
    0xAC01A184,	0x55250902,	0xA184A164,	0x008080A8,	0xAC21ABE1,	0xE2A8A8A0,	0xABE2A164,	0x55153505,
    0xA18499C5,	0xF59D353D,	0x9A0691C5,	0x038383EB,	0xA3649984,	0x55557F80,	0x9B4599C5,	0x5557F800,
    0x91A59123,	0x2D2F2D2C,	0xA3419102,	0x5C70E080,	0x9AE291A5,	0x5C800000,	0xA3619AE1,	0x787878F9,
    0xABC1A143,	0x0D0D0D25,	0xA1430000,	0x00000000,	0xA321A143,	0x2535D555,	0xA163A143,	0xAAA2EAEA,
    0xA184A163,	0x60606060,	0xA1A49963,	0x09090929,	0xA184A143,	0x88E8E0A0,	0xA1849943,	0x030B0B0B,
    0x99639923,	0x2BAFA7AF,	0x99439923,	0x0020A2AA,	0x99439923,	0x0A2A8AAA,	0x99439923,	0xA8A8AAAA,
    0x99439123,	0x00000202,	0x91239143,	0x576F5F9F,	0x99439922,	0xAA2BAFAB,	0x00009123,	0x5F5F5F5F,
    0x91649123,	0x70707070,	0x99E69164,	0xF8F87AFE,	0x91239143,	0x0505C5C5,	0x99A59964,	0xE0F87C5F,
    0x99C599A5,	0x00000882,	0x99A59964,	0x020A0B0B,	0x99C599A4,	0x80A0EA96,	0x99A59964,	0x0B030B0B,
    0x99639923,	0x0B2B0E2A,	0xA143A123,	0x888A2A0A,	0x99639923,	0x2BAF2EAE,	0xA143A123,	0x0A0A0202,
    0xA1430000,	0x00000000,	0xA1430000,	0x00000000,	0xA143A123,	0x80200002,	0xA1430000,	0x00000000,
    0xA283A143,	0x5C565757,	0x9B4399E4,	0x0080E05E,	0xA1439984,	0x2D3D3DB9,	0x99C49964,	0xB8F7B5FD,
    0xA3429AE3,	0xF0E0A0E0,	0xAC21A382,	0x78787878,	0xA3429964,	0xE05F5555,	0xABC2A164,	0x00E35555,
    0xAC01A1E4,	0x0714D850,	0xAC22AC03,	0x0202020A,	0xAC42A204,	0x7060C080,	0xA3E25922,	0x00072515,
    0xAC04A3C4,	0x0B030B03,	0xA3C49B23,	0x09090B0B,	0xA3E36183,	0x00008060,	0xA3C3A363,	0x29090B0B,
    0x9B0392A3,	0xBE3E2C08,	0xAC019B22,	0x787860E0,	0xA3629AE3,	0xBFBE2820,	0xAC21A382,	0x7060E0E0,
    0xAC21AC01,	0xA82A280A,	0xAC01A1A4,	0x09030000,	0xAC21AC01,	0x08080A0A,	0xAC018281,	0x00000034,
    0xA383A1A4,	0xC060D098,	0xA3849B44,	0x8F0A0A08,	0xABA299C4,	0x34240705,	0xA36499C5,	0x0002AD55,
    0x9B2399C3,	0x00000209,	0x9AE19922,	0x032DB555,	0x9B049943,	0x2DB5D555,	0x99229122,	0x80808000,
    0xA1430000,	0x00000000,	0xA163A143,	0xAAEAEAD8,	0xA1430000,	0x00000000,	0xA163A143,	0xD0DAFAFA,
    0xA164A163,	0x8080A0A2,	0xA1849943,	0x2B2B0B2B,	0xA163A143,	0x80A0A0A2,	0xA163A143,	0x02000301,
    0xA1439923,	0xA800A000,	0xA1439923,	0x00200000,	0xA1439923,	0x00000000,	0xA143A123,	0xA0800000,
    0x99239122,	0x00020000,	0x91029122,	0x57979755,	0xA1439122,	0x2B2B2B2B,	0x91239102,	0x8A8A8A8A,
    0x91029123,	0xD5D5E5D5,	0x99649123,	0x8080E0E8,	0x91029122,	0xD5E5D5D5,	0x99439123,	0x80C0E0EA,
    0x99A49964,	0x808AEA65,	0x99849943,	0x0A0A092D,	0x99639943,	0x8022E3D1,	0x99649923,	0x2AAA0BAB,
    0x99439923,	0x0828AA8A,	0xA143A123,	0x08000000,	0xA1439923,	0x88808080,	0xA1430000,	0x00000000,
    0xA143A123,	0x02028080,	0xA163A143,	0xDCFC7B78,	0xA143A123,	0x82000000,	0xA163A143,	0xFCF878F8,
    0xA1439984,	0xB7B5DDBD,	0x99849964,	0x08210101,	0xA1649984,	0xBFBFAB3F,	0x99849944,	0x03020A22,
    0x99649943,	0x2629E722,	0xAB63A163,	0x57565454,	0x99639943,	0xB80AAAA0,	0xAB43A164,	0x54565757,
    0xAC42AC02,	0xC28A0309,	0x932250C2,	0x1595D595,	0xAC42AC02,	0x0A0A02C2,	0xAC0250E2,	0x95350D02,
    0x93635102,	0x58575555,	0xA3A35942,	0x00807858,	0xA3C350E2,	0x55555EA0,	0xABC250E2,	0x60C00000,
    0xA3C1A362,	0x56DCF8A8,	0xABE148A0,	0x00000F25,	0xA3A25941,	0x00000016,	0xABE148A1,	0x050D0903,
    0xA3A14881,	0x022D5555,	0xABE148A0,	0xDC5C5C5C,	0x48A14860,	0xFAEEBFA8,	0xAC014880,	0x585070C0,
    0xABC19964,	0x0D0D0D0D,	0x99A59964,	0x00828283,	0xABC19984,	0x0D050525,	0x99849964,	0x00000282,
    0x99649122,	0x0D2F0D2F,	0x99229122,	0x00000000,	0x99439922,	0x2D252505,	0x99220000,	0x00000000,
    0xA1430000,	0x00000000,	0xA1430000,	0x00000000,	0xA1430000,	0x00000000,	0xA1430000,	0x00000000,
    0xA163A143,	0xA2AAA2AB,	0xA1430000,	0x00000000,	0xA1430000,	0x00000000,	0xA143A123,	0x00020000,
    0xA1430000,	0x00000000,	0xA1430000,	0x00000000,	0xA1430000,	0x00000000,	0xA1430000,	0x00000000,
    0xA1439122,	0x2B2B2B2B,	0x91229102,	0x8A080A88,	0xA1439123,	0x2B0B0A0A,	0x91229102,	0x2808002A,
    0x91029122,	0xF5F5F9F1,	0x91239102,	0x00008000,	0x91229123,	0xF5F5D5D5,	0x91639123,	0x557DBD83,
    0x99439923,	0x80F0D8FA,	0x99439923,	0x000008A8,	0x99230000,	0x00000000,	0x99439923,	0x8A8AC2EA,
    0xA1439923,	0x80008020,	0xA143A123,	0x00000880,	0xA1439923,	0x20200202,	0xA1439923,	0x00000080,
    0xA143A123,	0x00020002,	0xA163A143,	0xE8E8F8BA,	0xA143A123,	0x00000202,	0xA163A143,	0x6F4EEFEF,
    0x99849964,	0xE28A8020,	0x99849964,	0xBF3D3F3B,	0xA1439984,	0xFDF9FFBF,	0x99849963,	0x3BAD9997,
    0x99639943,	0xA02A0A08,	0xA1849963,	0xC080C080,	0x99639943,	0x0A0A0A00,	0xA184A163,	0xB0F0A0C0,
    0xAC23A1C5,	0xC0407054,	0xAC02A3C3,	0x02020B2D,	0xA1C5A184,	0xA8BA2BAA,	0xA3A3A1A4,	0x80706060,
    0xABE3A3C4,	0x20A0F87C,	0xABE25901,	0x00030109,	0xABE3A384,	0xE8F0E0E0,	0xAC02A184,	0x03002090,
    0x69A14881,	0x36D55555,	0xAC2148C1,	0x00C060C0,	0xAC026161,	0x5E000000,	0xAC22A164,	0x00000024,
    0xAC016941,	0xD7000000,	0xAC01A243,	0x00000001,	0xAC21ABE1,	0x00030200,	0xABE1A143,	0x2DD555D5,
    0xABE19943,	0x3515D555,	0x99849943,	0x82ABAAAB,	0xA143A123,	0x00202228,	0xA1439923,	0x00000008,
    0x99439902,	0x0A0F0A8A,	0x99239922,	0x00000080,	0x99239922,	0x08080808,	0x99239922,	0x80808000,
    0xA163A143,	0x6D6E6466,	0xA1430000,	0x00000000,	0xA143A123,	0x88088808,	0xA1430000,	0x00000000,
    0xA1430000,	0x00000000,	0xA163A143,	0xAABAAA0B,	0xA163A143,	0xA0A8B0B0,	0xA164A143,	0x0A0B0A0A,
    0xA1430000,	0x00000000,	0xA1430000,	0x00000000,	0xA1430000,	0x00000000,	0xA1430000,	0x00000000,
    0xA1439923,	0x0B0A0202,	0x91029123,	0x5556575B,	0xA1439923,	0x02020200,	0x91229923,	0x5B5B5B57,
    0x91239143,	0xEAD5E5D5,	0x994391A5,	0x28AEFFF5,	0x91439184,	0xC9C5C525,	0x99E691A5,	0x79EAC2C0,
    0x99649943,	0x5DAD252F,	0x99439923,	0x88088080,	0x99A59943,	0xBD2D2D0F,	0x99639923,	0xEAEAA8A8,
    0xA1239943,	0xFA7A7AEE,	0xA143A123,	0xA8202020,	0xA1849943,	0xAF8F8BAA,	0xA163A143,	0xFE688020,
    0xA163A123,	0xAEAAA080,	0xA163A123,	0xAAAA0B0A,	0xA164A163,	0xA0800000,	0xA164A143,	0x0D2B0B03,
    0xA1439984,	0x393F2E0A,	0x99649963,	0x00008080,	0x99439923,	0x80002020,	0x99649943,	0xA080A000,
    0xA1639963,	0xA8A0E8A0,	0xA1A4A163,	0x6A6A7A70,	0x99639943,	0x80000800,	0xA1A4A164,	0x98F8E8E8,
    0xA1A5A184,	0x82820200,	0xA38499C5,	0x70505E55,	0xA1C5A184,	0x838A0202,	0x9A8599C5,	0x55565C54,
    0xA3A4A1C5,	0x0000FD55,	0xAC02A184,	0xD0D05E55,	0xABE399E5,	0x55800000,	0xAC02A1A4,	0x57DC9818,
    0xAC22A1A4,	0x0000EA55,	0xAC02A184,	0x34369755,	0xAC22A1C5,	0xD5000000,	0xAC02A184,	0x57D490F0,
    0xABE1A184,	0x0003AD55,	0xA1C3A143,	0x155555D5,	0xAC22A1A4,	0xF5010909,	0xA164A143,	0x0D020000,
    0xA143A123,	0x22282880,	0xA1439923,	0x22200000,	0xA163A123,	0xABAAAA2A,	0xA143A123,	0x88800808,
    0x99239922,	0x00080000,	0xA1439922,	0xE8E8E8E8,	0x99439922,	0xBEB8BA2E,	0xA1439922,	0xE8E8A8A0,
    0xA143A123,	0x0808080A,	0xA1430000,	0x00000000,	0xA143A123,	0x0A0A0888,	0xA1430000,	0x00000000,
    0xA184A143,	0xE0E0E0E0,	0xA184A143,	0x2D2D2D2D,	0xA184A143,	0xA0E0E0E0,	0xA184A143,	0x0D290D09,
    0xA1430000,	0x00000000,	0xA143A123,	0x02020202,	0xA1430000,	0x00000000,	0xA143A123,	0x0A000202,
    0xA1439923,	0x00000000,	0x91239923,	0x57575757,	0xA1439923,	0x00000000,	0x91229923,	0x57575757,
    0x91A59143,	0x687860F0,	0x9A2791C5,	0xEAEAE2E0,	0x91C59164,	0x705870F8,	0x9A2791E6,	0xC0E08080,
    0x99C59943,	0x09290B0B,	0x99649943,	0xDA10A0C0,	0x9A069964,	0x2D2D2F2D,	0x99639943,	0xD090BA2A,
    0xA1849964,	0xEAAA8280,	0xA184A164,	0xAEB8E0EA,	0xA1849964,	0x008080E0,	0xA1849964,	0x22200000,
    0xA184A164,	0x80080000,	0xA184A143,	0x0B0B030A,	0xA184A164,	0x00200008,	0xA1849963,	0x02030303,
    0xA1239943,	0xADA9A98F,	0x99649943,	0xA0C8DAFF,	0x99439923,	0x20282828,	0x99439923,	0x000020A0,
    0xA1639943,	0x80888000,	0xA1A5A164,	0x68E8E8E8,	0xA1639943,	0x8080A0A8,	0xA1A5A164,	0xE8C0E8E0,
    0xA1C5A1A5,	0xC0C00080,	0x9A4699C5,	0x5C5C5F7F,	0xA1C5A1A5,	0x80202080,	0x9A0699C5,	0x62E2A2F2,
    0xAC03A245,	0x80806058,	0xAC02A284,	0x18000002,	0xA284A1C5,	0xDCD555D5,	0xA323A1A5,	0x2D555555,
    0xAC22A2E4,	0x00000060,	0xAC22AB83,	0xC0000001,	0xA244A1A5,	0x60555555,	0xA225A184,	0x0B555555,
    0xAC02A184,	0x052515D5,	0xA184A164,	0x28000200,	0xA184A164,	0x80808080,	0xA184A164,	0x08080000,
    0xA164A143,	0x03000000,	0xA184A143,	0x9B9B2F2B,	0xA1A4A184,	0xFFAFA9A0,	0xA1849963,	0x2A0A080B,
    0x99439923,	0x2C082000,	0x99439923,	0x283C2002,	0x99639943,	0x022AAA82,	0x99639943,	0xEFADAE3A,
    0xA143A123,	0x88808000,	0xA1430000,	0x00000000,	0xA143A123,	0x00000020,	0xA143A123,	0x00202020,
    0xA184A143,	0xE060E0E0,	0xA1849943,	0x0D0F0B0B,	0xA184A143,	0xE0E06060,	0x99A49943,	0x8F0D8DAD,
    0xA1439923,	0x80008080,	0xA143A123,	0x00080200,	0xA1439923,	0x8080A080,	0xA143A123,	0x8008A2A2,
    0xA1439923,	0x00000002,	0x91229923,	0x57575756,	0xA1439923,	0x00020202,	0x99239102,	0x08080A0A,
    0x9A859184,	0x5F5FAA00,	0xA3A69A27,	0x555F78E0,	0x9B059A44,	0xE060608B,	0x9B269A47,	0x020D0902,
    0xA36599C5,	0xD5AD0200,	0x9AE29943,	0x5555D52D,	0x9B2399E6,	0xB8D7D5D6,	0xA3A19A43,	0x29E06080,
    0xAC029963,	0x55575E78,	0xABE2A184,	0x55FD0200,	0xABE1A283,	0x60030900,	0xABC2A1E4,	0xA8567800,
    0xABC2A184,	0x5555BF00,	0xA3A3A1A4,	0x557E8000,	0xAC21AAC3,	0x00020058,	0xA3A399A5,	0x2FB52D0B,
    0xA3819943,	0x55F52B02,	0xA2229943,	0x5555D53E,	0xA3819963,	0xA05E5755,	0xA3A1A262,	0xB700C040,
    0xAC01A184,	0x555E6082,	0xAC22A1A4,	0x55AB00A0,	0xABA2A1C3,	0x09252F00,	0xAC03A204,	0x5858E002,
    0xA3E4A1E5,	0x5557DE20,	0xA3859A46,	0x55EA002E,	0xAC63A285,	0x0A0BAA5A,	0xA3659A27,	0xD555952D,
    0xA3C4A206,	0x55B50902,	0xA245A1A5,	0x5555D728,	0xA3C39A06,	0xE0585C78,	0xABE3A284,	0x96000002,
    0xA304A1C5,	0x55555580,	0xA2A4A184,	0x5555D525,	0xABE3A1C5,	0x0008BFD5,	0xAC02A225,	0x250B8060,
    0xAB63A184,	0x55555E60,	0xABE2A1A4,	0x5555AD02,	0xABC2A1E5,	0xC0820D05,	0xABE2A184,	0x00F85E57,
    0xA224A1A5,	0x55555525,	0xA1849964,	0x0B0F0F00,	0xAC03A1E5,	0xB50D0B80,	0xABC2A1E4,	0x5EE00209,
    0x99A49963,	0x55555503,	0xA1439963,	0xE080E8E2,	0xABA299A4,	0xAA00A857,	0xAC01A1E3,	0x55AE0080,
    0xA1E3A143,	0x555555E0,	0xA1C3A143,	0x55555525,	0xAC21A1A3,	0xEA002FB5,	0xAC01A1A3,	0xAD028078,
    0xA184A143,	0xE0E870F0,	0x99849943,	0x09090909,	0xABE3A163,	0x57FA0002,	0xA36199A4,	0xD5AB00F8,
    0xA1439923,	0x80808000,	0xA1239963,	0xAAAAAAAD,	0xA3819943,	0x55D52F00,	0xA3619983,	0x5F60800B,
    0x99439923,	0xAAAAAA2C,	0x99229122,	0x0202020A,	0xA3219963,	0xB5090280,	0xA3019963,	0x557BEB0B,
    0x9A8591C5,	0x0BF55755,	0xA3A69A27,	0xE070585F,	0x9AE391E5,	0x350B0000,	0x9B459A27,	0x55D5AD80,
    0xA3A59A05,	0xBA020BB5,	0x9B229163,	0x0A35D555,	0xA2E69184,	0xF5F5F52B,	0x9AC29143,	0x555555A0,
    0xABE29963,	0xE05F5555,	0xABE2A184,	0x02FD5555,	0x9943A382,	0x00000A57,	0xA163AAE3,	0x00C0F0F5,
    0xAB03A164,	0xD85F5555,	0xA38399C5,	0x00E05E55,	0xAA63A164,	0x5557570B,	0x99A49184,	0x00030303,
    0x9B2291E2,	0xD7282AD5,	0xAB819163,	0x000BB555,	0x91E29123,	0xF5D5D5F8,	0xA3819943,	0x55557AE0,
    0xABE1A163,	0x807E5555,	0xAB83A184,	0x0BF55555,	0xAC01A164,	0x5555AA00,	0xAC43A1A4,	0x5555FF00,
    0xA3A5A1E6,	0x58565555,	0xA3869A67,	0x0B007A55,	0xAB85A1C5,	0x5555FF00,	0xA3269A27,	0x5555FD00,
    0xA3A49A06,	0x8002ADD5,	0xA383A1C5,	0x00F05C57,	0x9AC699E5,	0xD5D5D50A,	0xA22699C5,	0x5F775F00,
    0xAC04A245,	0xD52A00EB,	0xABE3A1C5,	0xC0022DF5,	0xA22699C5,	0x82FFFFBD,	0xA1C5A1A5,	0x0EAB130B,
    0xAC22A204,	0x0982605E,	0xAC02A1C4,	0x55D52A00,	0xA224A184,	0xD8D5D5D5,	0xA2E3A184,	0x00555555,
    0xAC03A265,	0x60C00225,	0xAC03A204,	0x25250B80,	0xA284A1C5,	0x3D555555,	0xA2E4A1C5,	0xE0575555,
    0xA3A299A4,	0x5658A002,	0xAC01A184,	0x002AB755,	0xA2E29943,	0x0BF555FD,	0xA183A143,	0xBDADAF02,
    0xABE1A1E3,	0x250B8078,	0xABE1A163,	0x78E0020B,	0xA283A143,	0x78555555,	0xAAA3A163,	0x2F555557,
    0xAC23A225,	0x0903EA5F,	0xA36291A4,	0x57FEA0AA,	0xA1C59A26,	0x082828D5,	0x9A059984,	0x2AD59500,
    0xABA19983,	0x80000AB5,	0xA34199C3,	0x25050B80,	0x9A039943,	0xB5555502,	0xA3219963,	0x605F5555,
    0xA3019983,	0x70C0020D,	0xA3019983,	0x0D09AB7B,	0xA2C29943,	0x25D55557,	0x912291E2,	0x250A0357,
    0x91849AE3,	0x55A9C0C0,	0xA40591E5,	0xA0E05F55,	0x91439164,	0xE5F5F1F9,	0x9A279184,	0x70706060,
    0xA3C69184,	0x0A0ABFD5,	0xA3819183,	0xA0A0E85F,	0x9A079143,	0x2D2D2D2D,	0x89239143,	0x5D5F5F5F,
    0x9A23A3E1,	0x5F5F5F3F,	0x0000AC41,	0xFDFDFFFF,	0x00009943,	0x7F7FFFFF,	0xA184A184,	0xFFFFFFFF,
    0xAC22A1A4,	0x0200AA55,	0xA34399A5,	0xAA02B555,	0x99E5A184,	0x75FAF8FC,	0x9A059143,	0xAFADAD00,
    0x92628923,	0x000AD555,	0xA3819123,	0xA0EA5555,	0x890291E2,	0x0000F0F5,	0x91C39122,	0x55555700,
    0xAC21A184,	0x00AA5555,	0xAC63A1E5,	0x00AA5555,	0xA244A163,	0x555557A0,	0xA225A184,	0x7F7E7E00,
    0xAC24A1E6,	0x0000FA55,	0xA3C59A27,	0x0000AA55,	0xA226A1C5,	0xEAE8A000,	0xA2279A06,	0x00200303,
    0xA3A49A26,	0x0000A855,	0xA3C49A65,	0x0000007E,	0x9A0799C5,	0x09092B09,	0x99E699C5,	0xB0606048,
    0xA245A3C4,	0xA05A5557,	0xABE4A1C5,	0x55AA00A8,	0x99E69A06,	0x53575F5F,	0xA1A5A1C5,	0x55D5D5D6,
    0xAC03A224,	0x55AA00AA,	0xAC02A224,	0x55AA00AA,	0xA1C5A163,	0x003DAD2D,	0xA1C5A164,	0xA0777E7E,
    0xAC23A265,	0x5F8000AA,	0xAC03A364,	0x55000080,	0xA26699C5,	0xF8575F5F,	0xA2E4A1C5,	0xA0555555,
    0xABE2A283,	0xBD000000,	0xAC02A283,	0x55000000,	0xA3039984,	0x00555555,	0xA303A164,	0x0A555555,
    0xAC41A283,	0x5500008A,	0xAC41AAA4,	0x550000AA,	0xA243A143,	0x025555D5,	0xA206A163,	0xE85E5E7C,
    0xAC249AC5,	0xFD0B0BAD,	0xA3639285,	0xF8E8F857,	0xA2269A06,	0x018B0303,	0x91C69184,	0x0B25052F,
    0xA2C2A382,	0x56555503,	0x9A82A321,	0xA0DADAF8,	0x99439984,	0x6BA3AB6B,	0x91029143,	0xFDFEFEF6,
    0x9AC29A02,	0xAA0A0AB5,	0x91C29262,	0x5B5B5B03,	0x91239102,	0x080EAA02,	0x91029122,	0x5B97ABAF,
    0x91C49283,	0xF8FDFDFD,	0xA3E691E5,	0x5FE0E0E0,	0x914391C4,	0xFDFEFCFC,	0x91A59A67,	0x9525172F,
    0xA3A69184,	0xD52B0A2B,	0x91439262,	0x0F5F7F7F,	0x91649A47,	0x6080C3C3,	0x91C391C3,	0xFFFFFFFF,
    0x99639963,	0xFFFFFFFF,	0xA184A184,	0xFFFFFFFF,	0xA341A341,	0xFFFFFFFF,	0xAC04AC04,	0xFFFFFFFF,
    0xA205A205,	0xFFFFFFFF,	0x92A29B43,	0xD8DBDBD3,	0xA307A307,	0xFFFFFFFF,	0x9A059A05,	0xFFFFFFFF,
    0x00009242,	0xFDFDFFFF,	0xA3419163,	0xA0A0E057,	0x89028902,	0xFFFFFFFF,	0x89029923,	0xA5E5FFFF,
    0xAC22AB23,	0xA8808055,	0xAC63AB84,	0xAA00005F,	0x9963A1A5,	0x25A5E5D5,	0xA1C5A226,	0x272B2FAF,
    0xABC5AC64,	0xA05DFDFD,	0xAC259AE6,	0xAD02020A,	0xA266A266,	0xFFFFFFFF,	0xA206A2E7,	0x560080C0,
    0x9B449A25,	0xF502002A,	0xA38599E6,	0x55A800A0,	0x9A269184,	0x2EF7F5D5,	0x9A6691C5,	0x785E5E5E,
    0x9A26A3A5,	0x0F5F7F7F,	0xA245AC04,	0xC0F5F5F5,	0x9A069AE6,	0x7F3FFFFF,	0xA1C5A364,	0xFDFCFCFC,
    0xAC02A184,	0x55BF0000,	0xABE29984,	0x55FF0000,	0xAB62A184,	0x00D55555,	0xA3439984,	0x00575555,
    0xA3A499E5,	0x55F50000,	0xA404A1C5,	0x5555AA00,	0xA3859A06,	0x005F5555,	0xA3E499E6,	0x00EA5555,
    0xABE29984,	0x5555AA00,	0xAC22A184,	0x5555AA00,	0xABE2A184,	0x00AA5555,	0xAC02A164,	0x00805F55,
    0xAC41A184,	0x5555A800,	0xA1E6AC63,	0x303A75F5,	0xA223AC41,	0x555500C3,	0xA1E6AC44,	0xFDFDFEFC,
    0xAC259A27,	0x55BF0303,	0x92C391E6,	0x55F82828,	0xAC459A27,	0x030BFD55,	0x92839184,	0x0000BDD5,
    0x9A439B02,	0x0F5F5795,	0x99C39AE2,	0xF0D6D6D6,	0x9AE29143,	0x0080D555,	0x99239AC2,	0xD55A0000,
    0x92429122,	0x552A0000,	0x91239202,	0x2F5F5F5F,	0x9A629122,	0x02AF5555,	0x91029202,	0x5FAF0F3F,
    0x91649984,	0xFEFEFEFD,	0x99A59A06,	0xBFBFBF7F,	0x998499A5,	0xFDFDFFFF,	0x9A079A07,	0xFFFFFFFF,
    0x91239164,	0xDBDBDBFF,	0x89228922,	0xFFFFFFFF,	0x91849184,	0xFFFFFFFF,	0x89028902,	0xFFFFFFFF,
    0x99239923,	0xFFFFFFFF,	0xA206A206,	0xFFFFFFFF,	0x99439943,	0xFFFFFFFF,	0xA227A227,	0xFFFFFFFF,
    0xA2C9A2C9,	0xFFFFFFFF,	0x91C591C5,	0xFFFFFFFF,	0xA2CAA2CA,	0xFFFFFFFF,	0x91C591C5,	0xFFFFFFFF,
    0x89228922,	0xFFFFFFFF,	0x89028902,	0xFFFFFFFF,	0x89028902,	0xFFFFFFFF,	0x89028902,	0xFFFFFFFF,
    0xA184A1E6,	0xC9F5F7FF,	0x0000A1E6,	0x7FFFFFFF,	0xA1A5A1A5,	0xFFFFFFFF,	0xA227A227,	0xFFFFFFFF,
    0xA227A227,	0xFFFFFFFF,	0x9984A206,	0xD6DAD8FA,	0xA227A227,	0xFFFFFFFF,	0x000099C5,	0xF7FFFFFF,
    0x916499A4,	0x797AFDFF,	0x91A59A48,	0x2925E5E5,	0x91649164,	0xFFFFFFFF,	0x92489AA9,	0xF1FDFDFF,
    0x9A479A47,	0xFFFFFFFF,	0xA1A5A1C5,	0xFDFEFEFD,	0x9AA99AA9,	0xFFFFFFFF,	0x0000A1C5,	0xFDFFFFFF,
    0xA163A184,	0x575B535B,	0x99439984,	0x0585E9E9,	0xA164A184,	0xDFDFDFDF,	0x99439984,	0xE9C9C9C1,
    0x9A4799C5,	0x60607078,	0x9A4799E6,	0x252D2909,	0x9A2799C5,	0x6060E040,	0x99E69A68,	0x58575757,
    0x99C59964,	0xB72D3D2D,	0xA163A164,	0x55555557,	0x996499C5,	0x58DAFCFE,	0xA164A184,	0x5F5F5F9F,
    0x0000A163,	0xDFFFFFFF,	0xA163A163,	0xFFFFFFFF,	0xA163A163,	0xFFFFFFFF,	0xA143A143,	0xFFFFFFFF,
    0xA24891E6,	0x03010309,	0x89A58923,	0x2B2D2D2F,	0x91E6A268,	0x5858D7D7,	0x892389A5,	0x6868E8F8,
    0x91238902,	0x00A028A2,	0x91029923,	0x5555A5AD,	0x89028922,	0x557E7EFF,	0x91029102,	0xFFFFFFFF,
    0x99239102,	0x0A220A02,	0x00009102,	0x7F7FFFFF,	0x91029923,	0x56F6FEFD,	0x91229122,	0xFFFFFFFF
    };

    GXColor l_color = {0x9D,0x9D,0x9D,0xFF};
}

class daObjTapestryDrawData_c {
public:

    daObjTapestryDrawData_c();

    static u32* dl() {return l_matDL;}
    static u32 dl_size() {return sizeof(l_matDL);}
    static ResTIMG* tex_coord() {return (ResTIMG*)&l_Txm_curtainTEX;}

    void ct_tex();
    void ct_dl();
public:

    //f32 array[8][6][2];
    f32 array[8*6*2];
    /* 0x180 */u8 m_dl[12];
    u8 pad[0x320-0x18C];

};

class daObjTapestry_c;

class daObjTapestryPacket_c : public J3DPacket{

public:
    static daObjTapestryDrawData_c m_draw_data;
    daObjTapestryPacket_c();

    void set_wind_fun(const cXyz&) {}

    void init(daObjTapestry_c*);
    void update();
    int calc_acc_spring_sub(const cXyz*, const cXyz*, float, float);
    void calc_acc_spring(int, int);
    void calc_acc_gravity();
    void calc_acc_wave(int, int);
    void calc_acc_hit(int, int);
    void calc_spd(int, int);
    void calc_pos_crr(int, int);
    void calc_pos();
    void calc_nrm();
    void calc_wind();
    void calc_hit();
    void calc_fire_leap(int, int);
    void calc_fire();
    void calc(daObjTapestry_c*);
    void set_hit(cXyz, cXyz, float, float, bool);
    cXyz* get_now_pos(int, int);
    void eff_start(int, int);
    u8 eff_start_chk(int, int);
    void eff_end();
    void eff_pos();
    void eff_delete();
    void smokeCallback_init();
    void smoke_set();
    void smoke_move(fopAc_ac_c*);
    void setup_vtx(daObjTapestryDrawVtx_c*);
    void load_tex();
    void setup_rendar();
    void setup_tev_stage();
    void setup_tevColReg(daObjTapestry_c*);
    void draw();
public:
                 daObjTapestryDrawVtx_c mDrawVtx[2];
                 daObjTapestryMoveVtx_c mMoveVtx;
                 u8 unkFD0[3][8][6];
    /* 0x1060 */ s32 unk1060;                       /* inferred */
    /* 0x1064 */ daObjTapestryFireEff_c unk1064[16];    /* inferred */
    /* 0x1324 */ s32 unk1324;                       /* inferred */
    /* 0x1328 */ cXyz unk1328;                      /* inferred */

    /* 0x1334 */ Mtx unk1334;            /* inferred */
    /* 0x1364 */ Mtx unk1364;            /* inferred */
    /* 0x1394 */ Mtx unk1394;            /* inferred */
    /* 0x13C4 */ u8 unk13C4;                        /* inferred */
    /* 0x13C5 */ char pad13C5[3];                   /* maybe part of unk13C4[4]? */
    /* 0x13C8 */ cXyz unk13C8;                       /* inferred */
    /* 0x13D4 */ cXyz unk13D4;                       /* inferred */

    /* 0x13E0 */ s16 unk13E0;                       /* inferred */
    /* 0x13E2 */ char pad13E2[2];
    /* 0x13E4 */ cXyz unk13E4;                       /* inferred */
    /* 0x13F0 */ s16 unk13F0;                       /* inferred */
    /* 0x13F2 */ s16 unk13F2;                       /* inferred */
    /* 0x13F4 */ s16 unk13F4;                       /* inferred */
    /* 0x13F6 */ char pad13F6[2];
    /* 0x13F8 */ cXyz unk13F8;                       /* inferred */
    /* 0x1404 */ cXyz unk1404;                       /* inferred */
    /* 0x1410 */ cXyz unk1410;                       /* inferred */
    /* 0x141C */ cXyz unk141C;                       /* inferred */
    /* 0x1428 */ cXyz unk1428;                       /* inferred */
    /* 0x1434 */ cXyz unk1434;                       /* inferred */
    /* 0x1440 */ cXyz unk1440;                       /* inferred */
    /* 0x144C */ f32 unk144C;                       /* inferred */
    /* 0x1450 */ f32 unk1450;                       /* inferred */
    /* 0x1454 */ u8 unk1454;                        /* inferred */
    /* 0x1455 */ char pad1455[3];                   /* maybe part of unk1454[4]? */
    /* 0x1458 */ cXyz unk1458;                       /* inferred */
    /* 0x1464 */ u8 unk1464;                        /* inferred */
    /* 0x1465 */ u8 unk1465;                        /* inferred */
    /* 0x1466 */ u8 unk1466;                        /* inferred */
    /* 0x1467 */ char pad1467[1];
    /* 0x1468 */ daObjTapestrySmokeCB_c unk1468;       /* inferred */
    /* 0x147C */ cXyz unk147C;                       /* inferred */
    /* 0x1488 */ csXyz unk1488;                       /* inferred */
    /* 0x1490 */ s32 unk1490;                       /* inferred */
    /* 0x1494 */ daObjTapestryPLight_c unk1494;     /* inferred */
}; /* SIZE >= 0x14C0*/
class daObjTapestryAttr_c;
class daObjTapestry_c: public fopAc_ac_c {
    typedef bool(daObjTapestry_c::*ActProcFunc)();
    typedef void(daObjTapestry_c::*InitProcFunc)();


public:
    void is_switch() const {}
    void on_switch() const {}
    void param_get_evId() const {}
    void param_get_swSave() const {}

    void chk_appear();
    void set_mtx();
    void init_mtx();
    int solidHeapCB(fopAc_ac_c*);
    bool create_heap();
    void create_res_load();
    void init_cc();
    void set_cc_pos();
    bool checkCollision();
    void set_eye_pos();
    cPhs_State _create();
    bool _delete();
    bool wait_act_proc();
    bool demo_request_act_proc();
    bool burn_act_proc();
    void burn_act_init_proc();
    void fine_act_init_proc();
    void setup_action(int);
    bool _execute();
    bool _draw();
public:
    /* 0x0290 */ request_of_phase_process_class unk290; /* inferred */
    /* 0x0298 */ daObjTapestryPacket_c packet;      /* inferred */
    /* 0x1758 */ J3DModel* unk1758;
    /* 0x175C */ dBgW* unk175C;
    /* 0x1760 */ Mtx unk1760;
    /* 0x1790 */ dCcD_Tri mTris[2];
    /* 0x1A30 */ dCcD_Stts mStts[2];                /* inferred */
    /* 0x1AA8 */ s16 unk1AA8;                       /* inferred */
    /* 0x1AAA */ s8 unk1AAA;                        /* inferred */
    /* 0x1AAB */ char pad1AAB[1];
    /* 0x1AAC */ s16 unk1AAC;                       /* inferred */
    /* 0x1AAE */ char pad1AAE[2];
    /* 0x1AB0 */ f32 unk1AB0;                       /* inferred */
    /* 0x1AB4 */ ActProcFunc unk1AB4;                       /* inferred */
    /* 0x1AC0 */ s32 unk1AC0;                       /* inferred */
}; /* SIZE = 0x1AC4 */

class daObjTapestryAttr_c { 
public:
daObjTapestryAttr_c operator=(const daObjTapestryAttr_c& other){
    // unkC[0] = other.unkC[0];
    // unkC[1] = other.unkC[1];
    // unkC[2] = other.unkC[2];
    // unkC[3] = other.unkC[3];
    // unkC[4] = other.unkC[4];
    // unkC[5] = other.unkC[5];
    // unkC[6] = other.unkC[6];
    // unkC[7] = other.unkC[7];
    // unkC[8] = other.unkC[8];
    // unkC[9] = other.unkC[9];
    // unkC[10] = other.unkC[10];
    // unkC[11] = other.unkC[11];
    // unkC[12] = other.unkC[12];
    // unkC[13] = other.unkC[13];
    // unkC[14] = other.unkC[14];
    // unkC[15] = other.unkC[15];
    //unk8 = other.unk8;
    unkC[0][0] = other.unkC[0][0];
    unkC[0][1] = other.unkC[0][1];
    unkC[1][0] = other.unkC[1][0];
    unkC[1][1] = other.unkC[1][1];
    unkC[2][0] = other.unkC[2][0];
    unkC[2][1] = other.unkC[2][1];
    unkC[3][0] = other.unkC[3][0];
    unkC[3][1] = other.unkC[3][1];
    unkC[4][0] = other.unkC[4][0];
    unkC[4][1] = other.unkC[4][1];
    unkC[5][0] = other.unkC[5][0];    
    unkC[5][1] = other.unkC[5][1];
    unkC[6][0] = other.unkC[6][0];
    unkC[6][1] = other.unkC[6][1];
    unkC[7][0] = other.unkC[7][0];
    unkC[7][1] = other.unkC[7][1];
    unk4C = other.unk4C; 
    unk4D = other.unk4D; 
    unk50 = other.unk50; 
    unk54 = other.unk54;
    unk58 = other.unk58;
    unk5C = other.unk5C;
    unk60 = other.unk60;
    unk64 = other.unk64;
};
public:
    f32 unkC[8][2];
    s8 unk4C;
    s8 unk4D;
    float unk50;
    s8 unk54;
    float unk58;
    float unk5C;
    float unk60;
    float unk64;
};

class daObjTapestry_HIO_c : public JORReflexible{
//static const daObjTapestryAttr_c M_attr;

public:
    inline const daObjTapestryAttr_c& attr() const { return field_C; }
    daObjTapestry_HIO_c();
    virtual ~daObjTapestry_HIO_c(){};
public:
    s8 field_4;
    s8 field_5;
    s8 field_6;
    s32* field_8;
    daObjTapestryAttr_c field_C;
    bool field_68;
}; //Size 0x6C

#endif /* D_A_OBJ_TAPESTRY_H */
